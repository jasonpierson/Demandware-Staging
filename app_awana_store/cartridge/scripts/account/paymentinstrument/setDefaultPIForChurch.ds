/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input customer : dw.customer.Customer
*   @input piList : dw.util.List
*   @input defaultPaymentInstrument : String
*
*/
importPackage( dw.system );
importPackage( dw.customer );
importPackage( dw.util );
importPackage( dw.crypto );

function execute( args : PipelineDictionary ) : Number
{
	var custProfile : dw.customer.Profile = args.customer.profile;
	var paymentInst : String = args.defaultPaymentInstrument;
	
	var custObj : dw.object.CustomObject = dw.object.CustomObjectMgr.getCustomObject("Church", custProfile.custom.SFChurchAccountID);    
	if (custObj != null) 
	{
		//Need to get the card information for the payment instrument
		for each(var paymentInt:CustomerPaymentInstrument in args.piList)
		{
			if (paymentInt.UUID == args.defaultPaymentInstrument)
			{
				//Set the values
				custObj.custom.defaultCCExpMonth = paymentInt.creditCardExpirationMonth;
				custObj.custom.defaultCCExpYear = paymentInt.creditCardExpirationYear;
				custObj.custom.defaultCCHolder = paymentInt.creditCardHolder;
				
				//Encrypt the credit card number
				var pubKey = 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6B2rA4cnLZg2fL0K1SHpAXiIvufUlMu7V0UkMfaa6+sXI152tgZbL98SDG8WvIYGflDX8uS8j6UbQVj3aUEsldRVVyEL75O/OfS2m9x2vHk2P+sBoOOq8moNXce6CQFM1HqOwwIOd+gS1rfdu5OW9NmbVTwjPoARZSek3X/XPa5VgXLDeoLpIYfgKw4N7kewfwPqzJ0uE8cR+w+j/uAe5y60dQfGFKUhVFfP3+Ay0GxcmHkD9HdlsCVZO6RruCBABapVVOewMfpEj6Sbe96wyvveuaZZ3Aj8dwCcGpy2eA91c60IhwD70XyvXVulA3A10lqUO0DwR4/tQKAslScXZwIDAQAB';
				var cipher : dw.crypto.Cipher = new dw.crypto.Cipher();
				var encodedMsg : String = cipher.encrypt(paymentInt.creditCardNumber, pubKey, 'RSA', '', 0);
				custObj.custom.defaultCCNumber = encodedMsg;
				custObj.custom.defaultCCType = paymentInt.creditCardType;
				break;
			}
		}
	}
	return PIPELET_NEXT;
}
