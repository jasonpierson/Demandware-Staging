/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*	@input  churchName : String
*	@input  getAll : Boolean
*   @output ChurchObj : Array
*
*/
importPackage( dw.system );
importPackage( dw.object );

function execute( args : PipelineDictionary ) : Number
{

	try
	{
		var custObj : dw.object.CustomObject = null;
		var churchList : Array = new Array;
		
		//if user entered a church name, return all churches with that name
		//else get all churches
		if (args.getAll == false) {
			var churchName = args.churchName;
			var churchIterator : dw.util.SeekableIterator = dw.object.CustomObjectMgr.queryCustomObjects("Church", "custom.ChurchName = {0}", "custom.ChurchName asc", churchName);
			if (churchIterator.hasNext()) {
				while (churchIterator != null && churchIterator.hasNext())
				{
					churchList.push(churchIterator.next());
				}
			} else {
				//if there are no matching churches, return error
				Logger.error("ssoGetAllChurches.ds: The church searched for does not exist.");
				return PIPELET_ERROR;
			}
		} else {
			//if no church name entered, return all churches
			var churchIterator : dw.util.SeekableIterator = dw.object.CustomObjectMgr.getAllCustomObjects("Church");
			while (churchIterator != null && churchIterator.hasNext())
			{
				churchList.push(churchIterator.next());
			}		   
		}
		
		//cleanup   
		if (churchIterator != null) {
			churchIterator.close();
		}
		
		//return the list of churches
		args.ChurchObj = churchList;
	}
	catch(e)
	{
		Logger.error("Error in Get All Churches ( {0} )", e.message);
		return PIPELET_ERROR;
	}
	
   	return PIPELET_NEXT;
}
