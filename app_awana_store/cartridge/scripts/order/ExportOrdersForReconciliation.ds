/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @input OrdersToExport : dw.util.Iterator
* @input FileName : String
*
*/
importPackage( dw.system );
importPackage( dw.io );
importPackage( dw.net );
importPackage( dw.object );
importPackage( dw.order );
importPackage( dw.value );

function execute( args : PipelineDictionary ) : Number
{
   (new dw.io.File(dw.io.File.IMPEX +'/src/order/')).mkdirs();
	var exportFileWriter : StringWriter = new StringWriter();
	var exportWriter : StringWriter = new StringWriter();
	
	//First build the header in the string, this is going to be a tab delimited file
	exportWriter.write("Date\tCustomerNumber\tDemandwareOrderNumber\tProStoresOrderNumber\tProductNetTotal\tProductDiscountTotal\tProductGrossTotal\r\n");
	
	//Build the detail
	var CustomerNumber : String;
	var OrderDate : String;
  	var SecondaryOrderNumber : String;		
	var orderList: dw.util.List = args.OrdersToExport.asList();
	
	for each(var order:dw.order.Order in orderList)
	{
		if (!empty(order))
		{
			CustomerNumber = "";
			SecondaryOrderNumber = "";
			
			if (!empty(order.customer) && !empty(order.customer.profile) && !empty(order.customer.profile.custom) && !empty(order.customer.profile.custom.AllowCustomerNumberOverride) && order.customer.profile.custom.AllowCustomerNumberOverride && !empty(order.custom.SFMailingAddressBookID)) {
				CustomerNumber = order.custom.SFMailingAddressBookID;
			} else if (!empty(order.customer) && !empty(order.customer.profile) && !empty(order.customer.profile.custom) && !empty(order.customer.profile.custom.SFMailingAddressBookID)) {
				CustomerNumber = order.customer.profile.custom.SFMailingAddressBookID;
			} else {
				CustomerNumber = Number(order.customerNo);
			}

			if (!empty(order.custom) && !empty(order.custom.SecondaryExternalOrderNo)) {
				SecondaryOrderNumber = order.custom.SecondaryExternalOrderNo;
			}	
			
			if (!empty(order.creationDate)) {
				OrderDate = dw.util.StringUtils.formatDate(order.creationDate, "dd/MM/yyyy");
			}
			
			/***************************************************************************************************************************
			 WRITE LINE ITEM & ORDER INFO
			***************************************************************************************************************************/	        	     	        
			exportWriter.write(OrderDate + "\t" + CustomerNumber + "\t" + order.orderNo + "\t" + SecondaryOrderNumber + "\t" + order.getMerchandizeTotalNetPrice() + "\t" + Money(order.getMerchandizeTotalNetPrice()-order.getAdjustedMerchandizeTotalNetPrice(), dw.system.Site.getCurrent().currencyCode) + "\t" + order.getAdjustedMerchandizeTotalNetPrice() + "\r\n");
		}
	}
	
	// write data to file
	exportWriter.flush();
	exportFileWriter.write(exportWriter.toString());
	exportWriter.close();
	
	try
	{	
		var file	 : File = new dw.io.File(dw.io.File.IMPEX + '/src/order/' + args.FileName);
		var content  : String = exportFileWriter.toString();
	
		if(!file.exists()) 
		{
			if(!file.createNewFile())
			{
				Logger.error("File "+file.name+" could not be created!");
				return PIPELET_ERROR;
			}
		} 
		else
		{
			Logger.debug("File "+file.name+" exists and gets overwritten!");
		}	

		var out : FileWriter = new FileWriter(file);
		out.write(content);
		out.flush();
		out.close();
	}
	catch(e)
	{
		Logger.error("An error occured while exporting orders to CSV {0}.", e);
		return PIPELET_ERROR;
	}	
	
	return PIPELET_NEXT;
}
