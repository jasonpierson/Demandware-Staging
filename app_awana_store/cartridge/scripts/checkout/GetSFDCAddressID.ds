/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input address : dw.customer.CustomerAddress
*   @input custProfile : dw.customer.Profile
*   @output SFDCAddressID : String
*
*/
importPackage( dw.customer );
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.rpc );
importPackage( dw.crypto );

function execute( args : PipelineDictionary ) : Number
{
    var addressDetails : CustomerAddress = args.address;
    var profileDetails : Profile = args.custProfile;
 
	//Get SFDC address__c ID for billing and shipping addresses
	//we have to get this data when they make the selection
	//b/c they could change the address; then the SFDC
	//address ID would no longer be available b/c it would not
	//exist yet
	
	if(!profileDetails.custom.SFAccountID ) {
		var customerAddressListIterator : dw.util.SeekableIterator = dw.object.CustomObjectMgr.queryCustomObjects("Addresses", "custom.SFDCAccountID = {0}", "custom.SFDCAccountID asc", profileDetails.custom.SFChurchAccountID);
	} else {
		var customerAddressListIterator : dw.util.SeekableIterator = dw.object.CustomObjectMgr.queryCustomObjects("Addresses", "custom.SFDCAccountID = {0}", "custom.SFDCAccountID asc", profileDetails.custom.SFAccountID);
	}
	var customAddress : object = null;
	while (customerAddressListIterator != null && customerAddressListIterator.hasNext())
	{
		customAddress = customerAddressListIterator.next();
		if (customAddress.custom.AddressLine1 == addressDetails.address1 && customAddress.custom.City == addressDetails.city && customAddress.custom.State == addressDetails.stateCode && customAddress.custom.PostalCode.slice(0,5) == addressDetails.postalCode.slice(0,5)) {
			args.SFDCAddressID = customAddress.custom.SFDCAddressID;
		}
	}

 	return PIPELET_NEXT;
}