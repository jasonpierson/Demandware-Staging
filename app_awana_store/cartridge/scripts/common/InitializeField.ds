/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );
importPackage( dw.catalog );

function execute( args : PipelineDictionary ) : Number
{
	try {
		var siteCatalog : Catalog = CatalogMgr.getSiteCatalog();
		var root : Catalog = siteCatalog.getRoot();
		
		/************************************************************************************************
		 TOP CATEGORIES
		************************************************************************************************/
		var topCats : collection = root.getOnlineSubCategories();		
		var topCatIter : Iterator = topCats.iterator();
		while (topCatIter != null && topCatIter.hasNext())	
		{
			var topCat = topCatIter.next();
			topCat.custom.showInLeftMenu = true;
			
			/************************************************************************************************
			 1ST LEVEL OF SUBCATEGORIES
			************************************************************************************************/			
			var subCats : collection = topCat.getOnlineSubCategories();		
			var subCatIter : Iterator = subCats.iterator();
			while (subCatIter != null && subCatIter.hasNext())	
			{
				var subCat = subCatIter.next();
				subCat.custom.showInLeftMenu = true;
					
				/************************************************************************************************
				 2ND LEVEL OF SUBCATEGORIES
				************************************************************************************************/			
				var subSubCats : collection = subCat.getOnlineSubCategories();		
				var subSubCatIter : Iterator = subSubCats.iterator();
				while (subSubCatIter != null && subSubCatIter.hasNext())	
				{
					var subSubCat = subSubCatIter.next();
					subSubCat.custom.showInLeftMenu = true;
				}				
			}
		}	
	}
	catch(e) {
		if(e instanceof Fault){
			Logger.error("Actor " + e.faultActor+" caused fault '"+e.faultCode +"' ("+e.faultString+" - "+e.faultDetail+")");
		}else{
			Logger.error(e.toString());
		}
		return PIPELET_ERROR;
	}
 	return PIPELET_NEXT;
}
