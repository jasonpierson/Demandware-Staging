/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input inputOrder : dw.order.Order
*
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.rpc );

function execute( args : PipelineDictionary ) : Number
{
    var currentOrder : Order = args.inputOrder;
    
    try {
	    
	    var webref : WebReference = webreferences.GetOrderStatusDev;
	    if ((dw.system.System.getInstanceType() == dw.system.System.PRODUCTION_SYSTEM) || dw.system.Site.getCurrent().getCustomPreferenceValue('useProductionWebServices')) {
	    	webref = webreferences.pGetOrderStatus;
	    }
		var stub : Stub = webref.defaultService; 
		
		var getOrderStatus:WebReference = new webref.OrderStatusIn();
		getOrderStatus.token = new webref.OrderStatusInToken();
		getOrderStatus.token.opportunityId = currentOrder.externalOrderNo;
		
	    if ((dw.system.System.getInstanceType() == dw.system.System.PRODUCTION_SYSTEM) || dw.system.Site.getCurrent().getCustomPreferenceValue('useProductionWebServices')) {
	    	var response = stub.pOrderStatusRequest(getOrderStatus);
		} else {
	    	var response = stub.orderStatusRequest(getOrderStatus);
		}
		
		if (response.resultSet.success == true) {
			currentOrder.setExternalOrderStatus(response.resultSet.orderStatus);
			//Based on values need to set up order status and shipping status
			if (response.resultSet.orderStatus == "Order Error") {
				currentOrder.setStatus(-1);
			} else if (response.resultSet.orderStatus == "Order Shipped" || response.resultSet.orderStatus == "Order Invoiced") {
				currentOrder.setStatus(dw.order.Order.ORDER_STATUS_COMPLETED);
			} else {
				currentOrder.setStatus(dw.order.Order.ORDER_STATUS_OPEN);
			}
			
			if (response.resultSet.trackNumber != null && response.resultSet.trackNumber != "") {
				currentOrder.shipments[0].trackingNumber = response.resultSet.trackNumber;
				currentOrder.setShippingStatus(dw.order.Order.SHIPPING_STATUS_SHIPPED);		
			}
		} 
	}
	catch(e) {
		if(e instanceof Fault){
			Logger.error("Actor " + e.faultActor+" caused fault '"+e.faultCode +"' ("+e.faultString+" - "+e.faultDetail+")");
		}else{
			Logger.error(e.toString());
		}
		return PIPELET_ERROR;
	}
 	
 	return PIPELET_NEXT;
}
